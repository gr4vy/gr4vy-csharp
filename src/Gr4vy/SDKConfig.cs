//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Gr4vy
{
    using Gr4vy.Hooks;
    using Gr4vy.Models.Components;
    using Gr4vy.Utils;
    using Gr4vy.Utils.Retries;
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public struct SDKConfig
    {
        /// <summary>
        /// Server identifiers available to the SDK.
        /// </summary>
        public enum Server {
            Sandbox,
            Production,
        }

        /// <summary>
        /// Server URLs available to the SDK.
        /// </summary>
        public static readonly Dictionary<Server, string> ServerMap = new Dictionary<Server, string>()
        {
            { Server.Sandbox, "https://api.sandbox.{id}.gr4vy.app" },
            { Server.Production, "https://api.{id}.gr4vy.app" },
        };

        public ISpeakeasyHttpClient Client;
        public string ServerUrl;
        public Server? ServerName;
        public Dictionary<Server, Dictionary<string, string>> ServerVariables;
        public string? MerchantAccountId;
        public string UserAgent;
        public Func<Gr4vy.Models.Components.Security>? SecuritySource;
        public SDKHooks Hooks;
        public RetryConfig? RetryConfig;

        /// <summary>
        /// Initializes a new instance of the SDKConfig struct with default values.
        /// </summary>
        public SDKConfig(ISpeakeasyHttpClient? client = null)
        {
            Client = client ?? new SpeakeasyHttpClient();
            ServerUrl = "";
            ServerName = null;
            ServerVariables = new Dictionary<SDKConfig.Server, Dictionary<string, string>>()
            {
                {SDKConfig.Server.Sandbox, new Dictionary<string, string>()
                {
                    {"id", "example"},
                }},
                {SDKConfig.Server.Production, new Dictionary<string, string>()
                {
                    {"id", "example"},
                }},
            };
            MerchantAccountId = null;
            UserAgent = "speakeasy-sdk/csharp 1.1.0 2.648.5 1.0.0 Gr4vy";
            SecuritySource = null;
            Hooks = new SDKHooks();
            RetryConfig = null;
        }

        public void SetServerVariable(string key, string value)
        {
            foreach (var serverVariables in this.ServerVariables.Values.Where(dict => dict.ContainsKey(key)))
            {
                serverVariables[key] = value;
            }
        }

        public string GetTemplatedServerUrl()
        {
            if (!String.IsNullOrEmpty(this.ServerUrl))
            {
                return Utilities.TemplateUrl(Utilities.RemoveSuffix(this.ServerUrl, "/"), new Dictionary<string, string>());
            }
            if (this.ServerName is null)
            {
                this.ServerName = SDKConfig.Server.Sandbox;
            }
            else if (!SDKConfig.ServerMap.ContainsKey(this.ServerName.Value))
            {
                throw new Exception($"Invalid server \"{this.ServerName.Value}\"");
            }

            Dictionary<string, string> serverDefault = new Dictionary<string, string>();

            if (this.ServerVariables.ContainsKey(this.ServerName.Value))
            {
                serverDefault = this.ServerVariables[this.ServerName.Value];
            }

            return Utilities.TemplateUrl(SDKConfig.ServerMap[this.ServerName.Value], serverDefault);
        }
    }
}