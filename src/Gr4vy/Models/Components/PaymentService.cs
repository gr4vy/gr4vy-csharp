//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Gr4vy.Models.Components
{
    using Gr4vy.Models.Components;
    using Gr4vy.Utils;
    using Newtonsoft.Json;
    using System;
    using System.Collections.Generic;
    
    public class PaymentService
    {

        /// <summary>
        /// Always `payment-service`
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; } = "payment-service";

        [JsonProperty("id")]
        public string? Id { get; set; } = "The ID of the payment service";

        /// <summary>
        /// The ID of the merchant account this job belongs to.
        /// </summary>
        [JsonProperty("merchant_account_id")]
        public string MerchantAccountId { get; set; } = default!;

        /// <summary>
        /// The definition ID of the service that has been configured.
        /// </summary>
        [JsonProperty("payment_service_definition_id")]
        public string PaymentServiceDefinitionId { get; set; } = default!;

        /// <summary>
        /// Defines if this payment service is currently active.
        /// </summary>
        [JsonProperty("active")]
        public bool? Active { get; set; } = true;

        [JsonProperty("method")]
        public string Method { get; set; } = default!;

        /// <summary>
        /// The display name for the payment service.
        /// </summary>
        [JsonProperty("display_name")]
        public string DisplayName { get; set; } = default!;

        /// <summary>
        /// Deprecated field used to define the order in which to process payment services
        /// </summary>
        [JsonProperty("position")]
        public long Position { get; set; } = default!;

        [JsonProperty("status")]
        public string? Status { get; set; }

        /// <summary>
        /// A list of currencies for which this service is enabled, in ISO 4217 three-letter code format.
        /// </summary>
        [JsonProperty("accepted_currencies")]
        public List<string> AcceptedCurrencies { get; set; } = default!;

        /// <summary>
        /// A list of countries for which this service is enabled, in ISO two-letter code format.
        /// </summary>
        [JsonProperty("accepted_countries")]
        public List<string> AcceptedCountries { get; set; } = default!;

        /// <summary>
        /// Defines if this payment service support payment method tokenization.
        /// </summary>
        [JsonProperty("payment_method_tokenization_enabled")]
        public bool PaymentMethodTokenizationEnabled { get; set; } = default!;

        /// <summary>
        /// Defines if this payment service supports network tokens.
        /// </summary>
        [JsonProperty("network_tokens_enabled")]
        public bool NetworkTokensEnabled { get; set; } = default!;

        /// <summary>
        /// Defines if this payment service is open loop.
        /// </summary>
        [JsonProperty("open_loop")]
        public bool OpenLoop { get; set; } = default!;

        /// <summary>
        /// Defines if this payment service has settlement reporting enabled.
        /// </summary>
        [JsonProperty("settlement_reporting_enabled")]
        public bool SettlementReportingEnabled { get; set; } = default!;

        /// <summary>
        /// Defines if this payment service has 3DS enabled.
        /// </summary>
        [JsonProperty("three_d_secure_enabled")]
        public bool? ThreeDSecureEnabled { get; set; } = null;

        /// <summary>
        /// An object containing a key for each supported card schemes, and for each key an object with the 3DS profile for this service for that scheme.
        /// </summary>
        [JsonProperty("merchant_profile")]
        public Dictionary<string, MerchantProfileSchemeSummary?>? MerchantProfile { get; set; } = null;

        /// <summary>
        /// The URL that needs to be configured with this payment service as the receiving endpoint for webhooks from the service to our system. Currently, we dp not yet automatically register webhooks on setup, and therefore webhooks need to be registered manually by the merchant.
        /// </summary>
        [JsonProperty("webhook_url")]
        public string? WebhookUrl { get; set; } = null;

        /// <summary>
        /// The non-secret credential fields that have been configured for this payment service. Any secret fields are omitted.
        /// </summary>
        [JsonProperty("fields")]
        public List<Field>? Fields { get; set; } = null;

        /// <summary>
        /// The non-secret reporting fields that have been configured for this payment service. Any secret fields are omitted.
        /// </summary>
        [JsonProperty("reporting_fields")]
        public List<Field>? ReportingFields { get; set; } = null;

        /// <summary>
        /// Defines if this payment service has been deleted
        /// </summary>
        [JsonProperty("is_deleted")]
        public bool? IsDeleted { get; set; } = false;

        /// <summary>
        /// The date and time when this payment service was first created in our system.
        /// </summary>
        [JsonProperty("created_at")]
        public DateTime CreatedAt { get; set; } = default!;

        /// <summary>
        /// The date and time when this payment service was last updated in our system.
        /// </summary>
        [JsonProperty("updated_at")]
        public DateTime UpdatedAt { get; set; } = default!;
    }
}