//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Gr4vy.Models.Components
{
    using Gr4vy.Models.Components;
    using Gr4vy.Utils;
    using Newtonsoft.Json;
    using System;
    
    /// <summary>
    /// PayoutSummary<br/>
    /// 
    /// <remarks>
    /// <br/>
    /// Represents a summary of a payout.
    /// </remarks>
    /// </summary>
    public class PayoutSummary
    {

        /// <summary>
        /// Always `payout`.
        /// </summary>
        [JsonProperty("type")]
        public string Type { get; } = "payout";

        /// <summary>
        /// The ID for the payout.
        /// </summary>
        [JsonProperty("id")]
        public string? Id { get; set; } = null;

        /// <summary>
        /// The monetary amount for this payout, in the smallest currency unit for the given currency, for example `1299` cents to create an authorization for $12.99.
        /// </summary>
        [JsonProperty("amount")]
        public long Amount { get; set; } = default!;

        /// <summary>
        /// The buyer used for this payout.
        /// </summary>
        [JsonProperty("buyer")]
        public TransactionBuyerOutput? Buyer { get; set; } = null;

        /// <summary>
        /// The type of payout to process.
        /// </summary>
        [JsonProperty("category")]
        public string? Category { get; set; } = null;

        /// <summary>
        /// The date this payout was created at.
        /// </summary>
        [JsonProperty("created_at")]
        public DateTime CreatedAt { get; set; } = default!;

        /// <summary>
        /// A supported ISO-4217 currency code.
        /// </summary>
        [JsonProperty("currency")]
        public string Currency { get; set; } = default!;

        /// <summary>
        /// The merchant identifier for this payout.
        /// </summary>
        [JsonProperty("external_identifier")]
        public string? ExternalIdentifier { get; set; } = null;

        /// <summary>
        /// The merchant details associated to this payout.
        /// </summary>
        [JsonProperty("merchant")]
        public PayoutMerchantSummary? Merchant { get; set; } = null;

        /// <summary>
        /// The ID of the merchant account this payout was created for.
        /// </summary>
        [JsonProperty("merchant_account_id")]
        public string? MerchantAccountId { get; set; } = null;

        [JsonProperty("payment_method")]
        public TransactionPaymentMethodOutput PaymentMethod { get; set; } = default!;

        [JsonProperty("payment_service")]
        public PayoutPaymentService PaymentService { get; set; } = default!;

        /// <summary>
        /// The ID of the payout in the underlying payment service.
        /// </summary>
        [JsonProperty("payment_service_payout_id")]
        public string? PaymentServicePayoutId { get; set; } = null;

        [JsonProperty("status")]
        public string Status { get; set; } = default!;

        /// <summary>
        /// The date this payout was last updated at.
        /// </summary>
        [JsonProperty("updated_at")]
        public DateTime UpdatedAt { get; set; } = default!;
    }
}