//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Gr4vy.Models.Components
{
    using Gr4vy.Utils;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    
    public class CartItem
    {

        /// <summary>
        /// The name of the cart item. The value you set for this property may be truncated if the maximum length accepted by a payment service provider is less than 255 characters.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; } = default!;

        /// <summary>
        /// The quantity of this item in the cart. This value cannot be negative or zero.
        /// </summary>
        [JsonProperty("quantity")]
        public long Quantity { get; set; } = default!;

        /// <summary>
        /// The amount for an individual item represented as a monetary amount in the smallest currency unit for the given currency, for example `1299` USD cents represents `$12.99`. The amount sent through to the payment processor as unitary amount will be calculated to include the discount and tax values sent as part of this cart item.
        /// </summary>
        [JsonProperty("unit_amount")]
        public long UnitAmount { get; set; } = default!;

        /// <summary>
        /// The amount discounted for this item represented as a monetary amount in the smallest currency unit for the given currency, for example `1299` USD cents represents `$12.99`.
        /// </summary>
        [JsonProperty("discount_amount")]
        public long? DiscountAmount { get; set; } = null;

        /// <summary>
        /// The tax amount for this item represented as a monetary amount in the smallest currency unit for the given currency, for example `1299` USD cents represents `$12.99`.
        /// </summary>
        [JsonProperty("tax_amount")]
        public long? TaxAmount { get; set; } = null;

        /// <summary>
        /// An external identifier for the cart item. This can be set to any value and is not sent to the payment service.
        /// </summary>
        [JsonProperty("external_identifier")]
        public string? ExternalIdentifier { get; set; } = null;

        /// <summary>
        /// The SKU or product code for the item.
        /// </summary>
        [JsonProperty("sku")]
        public string? Sku { get; set; } = null;

        /// <summary>
        /// The product URL for the item.
        /// </summary>
        [JsonProperty("product_url")]
        public string? ProductUrl { get; set; } = null;

        /// <summary>
        /// The URL for the image of the item.
        /// </summary>
        [JsonProperty("image_url")]
        public string? ImageUrl { get; set; } = null;

        /// <summary>
        /// A list of strings containing product categories for the item.
        /// </summary>
        [JsonProperty("categories")]
        public List<string>? Categories { get; set; } = null;

        /// <summary>
        /// The product type of the cart item.
        /// </summary>
        [JsonProperty("product_type")]
        public string? ProductType { get; set; } = null;

        /// <summary>
        /// The seller country of the cart item.
        /// </summary>
        [JsonProperty("seller_country")]
        public string? SellerCountry { get; set; } = null;

        /// <summary>
        /// Whether the item is exempt of tax.
        /// </summary>
        [JsonProperty("tax_exempt")]
        public bool? TaxExempt { get; set; } = null;

        /// <summary>
        /// The unit of measure or the unit of measure code.
        /// </summary>
        [JsonProperty("unit_of_measure")]
        public string? UnitOfMeasure { get; set; } = null;

        /// <summary>
        /// Item commodity code. Generally a UNSPSC code.
        /// </summary>
        [JsonProperty("commodity_code")]
        public string? CommodityCode { get; set; } = null;

        /// <summary>
        /// Brief item description.
        /// </summary>
        [JsonProperty("description")]
        public string? Description { get; set; } = null;

        /// <summary>
        /// Item import or export duties represented as a monetary amount in the smallest currency unit for the given currency, for example `1299` cents to create an authorization for `$12.99`
        /// </summary>
        [JsonProperty("duty_amount")]
        public long? DutyAmount { get; set; } = null;

        /// <summary>
        /// Freight/shipping amount represented as a monetary amount in the smallest currency unit for the given currency, for example `1299` cents to create an authorization for `$12.99`
        /// </summary>
        [JsonProperty("shipping_amount")]
        public long? ShippingAmount { get; set; } = null;
    }
}