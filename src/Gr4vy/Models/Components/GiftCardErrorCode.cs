//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Gr4vy.Models.Components
{
    using Gr4vy.Utils;
    using Newtonsoft.Json;
    using System;
    
    /// <summary>
    /// Gift card error codes.<br/>
    /// 
    /// <remarks>
    /// <br/>
    /// Gr4vy normalised gift card error codes. Keep the naming and style in line with<br/>
    /// those in the connectors framework.<br/>
    /// <br/>
    /// If new codes are added, append them at the end or amend public simulator<br/>
    /// documentation: https://docs.gr4vy.com/guides/features/gift-cards/simulator
    /// </remarks>
    /// </summary>
    public enum GiftCardErrorCode
    {
        [JsonProperty("invalid_gift_card")]
        InvalidGiftCard,
        [JsonProperty("expired_card")]
        ExpiredCard,
        [JsonProperty("inactive_card")]
        InactiveCard,
        [JsonProperty("invalid_service_credentials")]
        InvalidServiceCredentials,
        [JsonProperty("invalid_amount")]
        InvalidAmount,
        [JsonProperty("incorrect_currency")]
        IncorrectCurrency,
        [JsonProperty("insufficient_funds")]
        InsufficientFunds,
        [JsonProperty("invalid_service_configuration")]
        InvalidServiceConfiguration,
        [JsonProperty("operation_canceled")]
        OperationCanceled,
        [JsonProperty("service_error")]
        ServiceError,
        [JsonProperty("service_network_error")]
        ServiceNetworkError,
        [JsonProperty("unknown_error")]
        UnknownError,
    }

    public static class GiftCardErrorCodeExtension
    {
        public static string Value(this GiftCardErrorCode value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static GiftCardErrorCode ToEnum(this string value)
        {
            foreach(var field in typeof(GiftCardErrorCode).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    var enumVal = field.GetValue(null);

                    if (enumVal is GiftCardErrorCode)
                    {
                        return (GiftCardErrorCode)enumVal;
                    }
                }
            }

            throw new Exception($"Unknown value {value} for enum GiftCardErrorCode");
        }
    }

}