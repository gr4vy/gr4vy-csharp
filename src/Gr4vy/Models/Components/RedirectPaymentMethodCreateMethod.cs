//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Gr4vy.Models.Components
{
    using Gr4vy.Utils;
    using Newtonsoft.Json;
    using System;
    
    /// <summary>
    /// The method to use, this can be any of the methods that support redirect requests.
    /// </summary>
    public enum RedirectPaymentMethodCreateMethod
    {
        [JsonProperty("abitab")]
        Abitab,
        [JsonProperty("affirm")]
        Affirm,
        [JsonProperty("afterpay")]
        Afterpay,
        [JsonProperty("alipay")]
        Alipay,
        [JsonProperty("alipayhk")]
        Alipayhk,
        [JsonProperty("arcuspaynetwork")]
        Arcuspaynetwork,
        [JsonProperty("bacs")]
        Bacs,
        [JsonProperty("bancontact")]
        Bancontact,
        [JsonProperty("banked")]
        Banked,
        [JsonProperty("bcp")]
        Bcp,
        [JsonProperty("becs")]
        Becs,
        [JsonProperty("bitpay")]
        Bitpay,
        [JsonProperty("boleto")]
        Boleto,
        [JsonProperty("boost")]
        Boost,
        [JsonProperty("cashapp")]
        Cashapp,
        [JsonProperty("clearpay")]
        Clearpay,
        [JsonProperty("dana")]
        Dana,
        [JsonProperty("dcb")]
        Dcb,
        [JsonProperty("dlocal")]
        Dlocal,
        [JsonProperty("ebanx")]
        Ebanx,
        [JsonProperty("efecty")]
        Efecty,
        [JsonProperty("eps")]
        Eps,
        [JsonProperty("everydaypay")]
        Everydaypay,
        [JsonProperty("gcash")]
        Gcash,
        [JsonProperty("gem")]
        Gem,
        [JsonProperty("gemds")]
        Gemds,
        [JsonProperty("giropay")]
        Giropay,
        [JsonProperty("givingblock")]
        Givingblock,
        [JsonProperty("gocardless")]
        Gocardless,
        [JsonProperty("gopay")]
        Gopay,
        [JsonProperty("grabpay")]
        Grabpay,
        [JsonProperty("ideal")]
        Ideal,
        [JsonProperty("kakaopay")]
        Kakaopay,
        [JsonProperty("kcp")]
        Kcp,
        [JsonProperty("khipu")]
        Khipu,
        [JsonProperty("klarna")]
        Klarna,
        [JsonProperty("latitude")]
        Latitude,
        [JsonProperty("latitudeds")]
        Latitudeds,
        [JsonProperty("laybuy")]
        Laybuy,
        [JsonProperty("linepay")]
        Linepay,
        [JsonProperty("linkaja")]
        Linkaja,
        [JsonProperty("maybankqrpay")]
        Maybankqrpay,
        [JsonProperty("mercadopago")]
        Mercadopago,
        [JsonProperty("multibanco")]
        Multibanco,
        [JsonProperty("multipago")]
        Multipago,
        [JsonProperty("netbanking")]
        Netbanking,
        [JsonProperty("nupay")]
        Nupay,
        [JsonProperty("nequi")]
        Nequi,
        [JsonProperty("oney_10x")]
        Oney10x,
        [JsonProperty("oney_12x")]
        Oney12x,
        [JsonProperty("oney_3x")]
        Oney3x,
        [JsonProperty("oney_4x")]
        Oney4x,
        [JsonProperty("oney_6x")]
        Oney6x,
        [JsonProperty("ovo")]
        Ovo,
        [JsonProperty("oxxo")]
        Oxxo,
        [JsonProperty("pagoefectivo")]
        Pagoefectivo,
        [JsonProperty("payid")]
        Payid,
        [JsonProperty("paymaya")]
        Paymaya,
        [JsonProperty("paypal")]
        Paypal,
        [JsonProperty("paypalpaylater")]
        Paypalpaylater,
        [JsonProperty("payto")]
        Payto,
        [JsonProperty("payvalida")]
        Payvalida,
        [JsonProperty("picpay")]
        Picpay,
        [JsonProperty("pix")]
        Pix,
        [JsonProperty("pse")]
        Pse,
        [JsonProperty("rabbitlinepay")]
        Rabbitlinepay,
        [JsonProperty("rapipago")]
        Rapipago,
        [JsonProperty("razorpay")]
        Razorpay,
        [JsonProperty("redpagos")]
        Redpagos,
        [JsonProperty("scalapay")]
        Scalapay,
        [JsonProperty("sepa")]
        Sepa,
        [JsonProperty("servipag")]
        Servipag,
        [JsonProperty("shopeepay")]
        Shopeepay,
        [JsonProperty("singteldash")]
        Singteldash,
        [JsonProperty("smartpay")]
        Smartpay,
        [JsonProperty("sofort")]
        Sofort,
        [JsonProperty("spei")]
        Spei,
        [JsonProperty("stitch")]
        Stitch,
        [JsonProperty("stripedd")]
        Stripedd,
        [JsonProperty("thaiqr")]
        Thaiqr,
        [JsonProperty("touchngo")]
        Touchngo,
        [JsonProperty("truemoney")]
        Truemoney,
        [JsonProperty("trustly")]
        Trustly,
        [JsonProperty("trustlyeurope")]
        Trustlyeurope,
        [JsonProperty("upi")]
        Upi,
        [JsonProperty("venmo")]
        Venmo,
        [JsonProperty("vipps")]
        Vipps,
        [JsonProperty("waave")]
        Waave,
        [JsonProperty("webpay")]
        Webpay,
        [JsonProperty("wechat")]
        Wechat,
        [JsonProperty("yape")]
        Yape,
        [JsonProperty("zippay")]
        Zippay,
    }

    public static class RedirectPaymentMethodCreateMethodExtension
    {
        public static string Value(this RedirectPaymentMethodCreateMethod value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static RedirectPaymentMethodCreateMethod ToEnum(this string value)
        {
            foreach(var field in typeof(RedirectPaymentMethodCreateMethod).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    var enumVal = field.GetValue(null);

                    if (enumVal is RedirectPaymentMethodCreateMethod)
                    {
                        return (RedirectPaymentMethodCreateMethod)enumVal;
                    }
                }
            }

            throw new Exception($"Unknown value {value} for enum RedirectPaymentMethodCreateMethod");
        }
    }

}