//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace gr4vy.Models.Components
{
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using gr4vy.Models.Components;
    using gr4vy.Utils;
    
    /// <summary>
    /// Request body for updating a Payment Service
    /// </summary>
    public class PaymentServiceUpdate
    {

        /// <summary>
        /// The display name for the payment service.
        /// </summary>
        [JsonProperty("display_name")]
        public string? DisplayName { get; set; } = null;

        /// <summary>
        /// The non-secret credential fields that have been configured for this payment service. Any secret fields are omitted.
        /// </summary>
        [JsonProperty("fields")]
        public List<VoidableField>? Fields { get; set; } = null;

        /// <summary>
        /// The non-secret reporting fields that have been configured for this payment service. Any secret fields are omitted.
        /// </summary>
        [JsonProperty("reporting_fields")]
        public List<VoidableField>? ReportingFields { get; set; } = null;

        /// <summary>
        /// Deprecated field used to define the order in which to process payment services
        /// </summary>
        [JsonProperty("position")]
        public long? Position { get; set; } = null;

        /// <summary>
        /// A list of currencies for which this service is enabled, in ISO 4217 three-letter code format.
        /// </summary>
        [JsonProperty("accepted_currencies")]
        public List<string>? AcceptedCurrencies { get; set; } = null;

        /// <summary>
        /// A list of countries for which this service is enabled, in ISO two-letter code format.
        /// </summary>
        [JsonProperty("accepted_countries")]
        public List<string>? AcceptedCountries { get; set; } = null;

        /// <summary>
        /// Defines if this payment service is currently active.
        /// </summary>
        [JsonProperty("active")]
        public bool? Active { get; set; } = null;

        /// <summary>
        /// Defines if this payment service has 3DS enabled.
        /// </summary>
        [JsonProperty("three_d_secure_enabled")]
        public bool? ThreeDSecureEnabled { get; set; } = null;

        /// <summary>
        /// An object containing a key for each supported card schemes, and for each key an object with the 3DS profile for this service for that scheme.
        /// </summary>
        [JsonProperty("merchant_profile")]
        public Dictionary<string, MerchantProfileScheme>? MerchantProfile { get; set; } = null;

        /// <summary>
        /// Defines if this payment service support payment method tokenization.
        /// </summary>
        [JsonProperty("payment_method_tokenization_enabled")]
        public bool? PaymentMethodTokenizationEnabled { get; set; } = null;

        /// <summary>
        /// Defines if this payment service supports network tokens.
        /// </summary>
        [JsonProperty("network_tokens_enabled")]
        public bool? NetworkTokensEnabled { get; set; } = null;

        /// <summary>
        /// Defines if this payment service is open loop.
        /// </summary>
        [JsonProperty("open_loop")]
        public bool? OpenLoop { get; set; } = null;

        /// <summary>
        /// Defines if this payment service has settlement reporting enabled.
        /// </summary>
        [JsonProperty("settlement_reporting_enabled")]
        public bool? SettlementReportingEnabled { get; set; } = false;
    }
}