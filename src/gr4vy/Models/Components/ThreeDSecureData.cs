//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace gr4vy.Models.Components
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Linq;
    using System;
    using System.Collections.Generic;
    using System.Numerics;
    using System.Reflection;
    using gr4vy.Models.Components;
    using gr4vy.Utils;
    

    public class ThreeDSecureDataType
    {
        private ThreeDSecureDataType(string value) { Value = value; }

        public string Value { get; private set; }
        public static ThreeDSecureDataType ThreeDSecureDataV1 { get { return new ThreeDSecureDataType("ThreeDSecureDataV1"); } }
        
        public static ThreeDSecureDataType ThreeDSecureDataV2 { get { return new ThreeDSecureDataType("ThreeDSecureDataV2"); } }
        
        public static ThreeDSecureDataType Null { get { return new ThreeDSecureDataType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(ThreeDSecureDataType v) { return v.Value; }
        public static ThreeDSecureDataType FromString(string v) {
            switch(v) {
                case "ThreeDSecureDataV1": return ThreeDSecureDataV1;
                case "ThreeDSecureDataV2": return ThreeDSecureDataV2;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for ThreeDSecureDataType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((ThreeDSecureDataType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }


    /// <summary>
    /// Pass through 3-D Secure data to support external 3-D Secure authorisation. If using an external 3-D Secure provider, you should not pass a `redirect_url` in the `payment_method` object for a transaction.
    /// </summary>
    [JsonConverter(typeof(ThreeDSecureData.ThreeDSecureDataConverter))]
    public class ThreeDSecureData {
        public ThreeDSecureData(ThreeDSecureDataType type) {
            Type = type;
        }

        [SpeakeasyMetadata("form:explode=true")]
        public ThreeDSecureDataV1? ThreeDSecureDataV1 { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public ThreeDSecureDataV2? ThreeDSecureDataV2 { get; set; }

        public ThreeDSecureDataType Type { get; set; }


        public static ThreeDSecureData CreateThreeDSecureDataV1(ThreeDSecureDataV1 threeDSecureDataV1) {
            ThreeDSecureDataType typ = ThreeDSecureDataType.ThreeDSecureDataV1;

            ThreeDSecureData res = new ThreeDSecureData(typ);
            res.ThreeDSecureDataV1 = threeDSecureDataV1;
            return res;
        }

        public static ThreeDSecureData CreateThreeDSecureDataV2(ThreeDSecureDataV2 threeDSecureDataV2) {
            ThreeDSecureDataType typ = ThreeDSecureDataType.ThreeDSecureDataV2;

            ThreeDSecureData res = new ThreeDSecureData(typ);
            res.ThreeDSecureDataV2 = threeDSecureDataV2;
            return res;
        }

        public static ThreeDSecureData CreateNull() {
            ThreeDSecureDataType typ = ThreeDSecureDataType.Null;
            return new ThreeDSecureData(typ);
        }

        public class ThreeDSecureDataConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(ThreeDSecureData);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            {
                var json = JRaw.Create(reader).ToString();
                if (json == "null")
                {
                    return null;
                }

                var fallbackCandidates = new List<(System.Type, object, string)>();

                try
                {
                    return new ThreeDSecureData(ThreeDSecureDataType.ThreeDSecureDataV2)
                    {
                        ThreeDSecureDataV2 = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<ThreeDSecureDataV2>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(ThreeDSecureDataV2), new ThreeDSecureData(ThreeDSecureDataType.ThreeDSecureDataV2), "ThreeDSecureDataV2"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                try
                {
                    return new ThreeDSecureData(ThreeDSecureDataType.ThreeDSecureDataV1)
                    {
                        ThreeDSecureDataV1 = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<ThreeDSecureDataV1>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(ThreeDSecureDataV1), new ThreeDSecureData(ThreeDSecureDataType.ThreeDSecureDataV1), "ThreeDSecureDataV1"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                if (fallbackCandidates.Count > 0)
                {
                    fallbackCandidates.Sort((a, b) => ResponseBodyDeserializer.CompareFallbackCandidates(a.Item1, b.Item1, json));
                    foreach(var (deserializationType, returnObject, propertyName) in fallbackCandidates)
                    {
                        try
                        {
                            return ResponseBodyDeserializer.DeserializeUndiscriminatedUnionFallback(deserializationType, returnObject, propertyName, json);
                        }
                        catch (ResponseBodyDeserializer.DeserializationException)
                        {
                            // try next fallback option
                        }
                        catch (Exception)
                        {
                            throw;
                        }
                    }
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }
                ThreeDSecureData res = (ThreeDSecureData)value;
                if (ThreeDSecureDataType.FromString(res.Type).Equals(ThreeDSecureDataType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }
                if (res.ThreeDSecureDataV1 != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.ThreeDSecureDataV1));
                    return;
                }
                if (res.ThreeDSecureDataV2 != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.ThreeDSecureDataV2));
                    return;
                }

            }

        }

    }
}