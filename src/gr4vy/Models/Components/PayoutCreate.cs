//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace gr4vy.Models.Components
{
    using Newtonsoft.Json;
    using gr4vy.Models.Components;
    using gr4vy.Utils;
    
    /// <summary>
    /// PayoutCreate<br/>
    /// 
    /// <remarks>
    /// <br/>
    /// Represents the data required to create a new payout.
    /// </remarks>
    /// </summary>
    public class PayoutCreate
    {

        /// <summary>
        /// The monetary amount for this payout, in the smallest currency unit for the given currency, for example `1299` cents to create an authorization for $12.99.
        /// </summary>
        [JsonProperty("amount")]
        public long Amount { get; set; } = default!;

        /// <summary>
        /// The ISO-4217 currency code for this payout.
        /// </summary>
        [JsonProperty("currency")]
        public string Currency { get; set; } = default!;

        /// <summary>
        /// The ID of the payment service to use for the payout.
        /// </summary>
        [JsonProperty("payment_service_id")]
        public string PaymentServiceId { get; set; } = default!;

        /// <summary>
        /// The type of payment method to send funds too.
        /// </summary>
        [JsonProperty("payment_method")]
        public PayoutCreatePaymentMethod PaymentMethod { get; set; } = default!;

        /// <summary>
        /// The type of payout to process.
        /// </summary>
        [JsonProperty("category")]
        public PayoutCategory? Category { get; set; } = null;

        /// <summary>
        /// A value that can be used to match the payout against your own records.
        /// </summary>
        [JsonProperty("external_identifier")]
        public string? ExternalIdentifier { get; set; } = null;

        /// <summary>
        /// The `id` of a stored buyer to use for this payout Use this instead of the `buyer` or `buyer_external_identifier`.
        /// </summary>
        [JsonProperty("buyer_id")]
        public string? BuyerId { get; set; } = null;

        /// <summary>
        /// Inline buyer details for the payout. Use this instead of the `buyer_id` or `buyer_external_identifier`.
        /// </summary>
        [JsonProperty("buyer")]
        public GuestBuyerInput? Buyer { get; set; } = null;

        /// <summary>
        /// The `external_identifier` of a stored buyer to use for this payout. Use this instead of the `buyer_id` or `buyer`.
        /// </summary>
        [JsonProperty("buyer_external_identifier")]
        public string? BuyerExternalIdentifier { get; set; } = null;

        /// <summary>
        /// Merchant information for the source of the payout.
        /// </summary>
        [JsonProperty("merchant")]
        public PayoutMerchant? Merchant { get; set; } = null;

        /// <summary>
        /// Optional fields for processing payouts on specific payment services.
        /// </summary>
        [JsonProperty("connection_options")]
        public ConnectionOptions? ConnectionOptions { get; set; } = null;
    }
}